{"remainingRequest":"/Users/yanheng/Documents/work/web/terino-drawing-engine-d3/node_modules/thread-loader/dist/cjs.js!/Users/yanheng/Documents/work/web/terino-drawing-engine-d3/node_modules/babel-loader/lib/index.js!/Users/yanheng/Documents/work/web/terino-drawing-engine-d3/node_modules/eslint-loader/index.js??ref--13-0!/Users/yanheng/Documents/work/web/terino-drawing-engine-d3/src/basic/floorView.js","dependencies":[{"path":"/Users/yanheng/Documents/work/web/terino-drawing-engine-d3/src/basic/floorView.js","mtime":1617185431135},{"path":"/Users/yanheng/Documents/work/web/terino-drawing-engine-d3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanheng/Documents/work/web/terino-drawing-engine-d3/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanheng/Documents/work/web/terino-drawing-engine-d3/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yanheng/Documents/work/web/terino-drawing-engine-d3/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/yanheng/Documents/work/web/terino-drawing-engine-d3/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _createClass from \"/Users/yanheng/Documents/work/web/terino-drawing-engine-d3/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/yanheng/Documents/work/web/terino-drawing-engine-d3/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport { extent } from \"d3-array\";\nimport { svg } from \"d3-fetch\";\nimport { scaleLinear } from \"d3-scale\";\nimport { select } from \"d3-selection\";\nimport t from \"../../static/runway_1.svg\";\nimport data from \"../../static/data.json\";\n\nvar PartImage = function PartImage(props) {\n  _classCallCheck(this, PartImage);\n\n  var image = props.image,\n      relWidth = props.relWidth,\n      relHeight = props.relHeight,\n      transfer = props.transfer;\n  this.image = image;\n  this.transfer = transfer;\n  this.relWidth = relWidth;\n  this.relHeight = relHeight;\n};\n\nvar ThreeView = /*#__PURE__*/function () {\n  function ThreeView(props) {\n    _classCallCheck(this, ThreeView);\n\n    var container = props.container,\n        width = props.width,\n        height = props.height,\n        parts = props.parts;\n    this.container = container;\n    this.widht = width;\n    this.height = height;\n    this.parts = parts || [];\n    this.partImages = this.parts.map(function (item) {\n      return new PartImage(item);\n    });\n    this.svg = select(container).append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n    this.xScale = scaleLinear().domain(extent(parts, function (item) {\n      return item.relWidth;\n    })).range([0, width]);\n    this.yScale = scaleLinear().domain(extent(parts, function (item) {\n      return item.relHeight;\n    })).range([0, height]);\n    console.log(data);\n  }\n\n  _createClass(ThreeView, [{\n    key: \"render\",\n    value: function () {\n      var _render = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var partSvg, wrap;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return svg(\"/img/beam_3.svg\");\n\n              case 2:\n                partSvg = _context.sent;\n                wrap = this.svg.insert(function () {\n                  return partSvg.documentElement.firstElementChild;\n                });\n                console.log(wrap);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function render() {\n        return _render.apply(this, arguments);\n      }\n\n      return render;\n    }()\n  }]);\n\n  return ThreeView;\n}();\n\nexport { ThreeView as default };",{"version":3,"sources":["/Users/yanheng/Documents/work/web/terino-drawing-engine-d3/src/basic/floorView.js"],"names":["extent","svg","scaleLinear","select","t","data","PartImage","props","image","relWidth","relHeight","transfer","ThreeView","container","width","height","parts","widht","partImages","map","item","append","attr","xScale","domain","range","yScale","console","log","partSvg","wrap","insert","documentElement","firstElementChild"],"mappings":";;;;AAAA,SAASA,MAAT,QAAuB,UAAvB;AACA,SAASC,GAAT,QAAoB,UAApB;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,CAAP;AACA,OAAOC,IAAP;;IAEMC,S,GACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA,MACTC,KADS,GACgCD,KADhC,CACTC,KADS;AAAA,MACFC,QADE,GACgCF,KADhC,CACFE,QADE;AAAA,MACQC,SADR,GACgCH,KADhC,CACQG,SADR;AAAA,MACmBC,QADnB,GACgCJ,KADhC,CACmBI,QADnB;AAEjB,OAAKH,KAAL,GAAaA,KAAb;AACA,OAAKG,QAAL,GAAgBA,QAAhB;AACA,OAAKF,QAAL,GAAgBA,QAAhB;AACA,OAAKC,SAAL,GAAiBA,SAAjB;AACD,C;;IAGkBE,S;AACnB,qBAAYL,KAAZ,EAAmB;AAAA;;AAAA,QACTM,SADS,GAC2BN,KAD3B,CACTM,SADS;AAAA,QACEC,KADF,GAC2BP,KAD3B,CACEO,KADF;AAAA,QACSC,MADT,GAC2BR,KAD3B,CACSQ,MADT;AAAA,QACiBC,KADjB,GAC2BT,KAD3B,CACiBS,KADjB;AAEjB,SAAKH,SAAL,GAAiBA,SAAjB;AACA,SAAKI,KAAL,GAAaH,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAK,IAAI,EAAtB;AACA,SAAKE,UAAL,GAAkB,KAAKF,KAAL,CAAWG,GAAX,CAAe,UAACC,IAAD;AAAA,aAAU,IAAId,SAAJ,CAAcc,IAAd,CAAV;AAAA,KAAf,CAAlB;AAEA,SAAKnB,GAAL,GAAWE,MAAM,CAACU,SAAD,CAAN,CACRQ,MADQ,CACD,KADC,EAERC,IAFQ,CAEH,OAFG,EAEMR,KAFN,EAGRQ,IAHQ,CAGH,QAHG,EAGOP,MAHP,CAAX;AAKA,SAAKQ,MAAL,GAAcrB,WAAW,GACtBsB,MADW,CACJxB,MAAM,CAACgB,KAAD,EAAQ,UAACI,IAAD;AAAA,aAAUA,IAAI,CAACX,QAAf;AAAA,KAAR,CADF,EAEXgB,KAFW,CAEL,CAAC,CAAD,EAAIX,KAAJ,CAFK,CAAd;AAIA,SAAKY,MAAL,GAAcxB,WAAW,GACtBsB,MADW,CACJxB,MAAM,CAACgB,KAAD,EAAQ,UAACI,IAAD;AAAA,aAAUA,IAAI,CAACV,SAAf;AAAA,KAAR,CADF,EAEXe,KAFW,CAEL,CAAC,CAAD,EAAIV,MAAJ,CAFK,CAAd;AAGAY,IAAAA,OAAO,CAACC,GAAR,CAAYvB,IAAZ;AACD;;;;;4EAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACwBJ,GAAG,CAAC,iBAAD,CAD3B;;AAAA;AACQ4B,gBAAAA,OADR;AAEQC,gBAAAA,IAFR,GAEe,KAAK7B,GAAL,CAAS8B,MAAT,CACX;AAAA,yBAAMF,OAAO,CAACG,eAAR,CAAwBC,iBAA9B;AAAA,iBADW,CAFf;AAKEN,gBAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;SAxBmBlB,S","sourcesContent":["import { extent } from \"d3-array\";\nimport { svg } from \"d3-fetch\";\nimport { scaleLinear } from \"d3-scale\";\nimport { select } from \"d3-selection\";\nimport t from \"../../static/runway_1.svg\";\nimport data from \"../../static/data.json\";\n\nclass PartImage {\n  constructor(props) {\n    const { image, relWidth, relHeight, transfer } = props;\n    this.image = image;\n    this.transfer = transfer;\n    this.relWidth = relWidth;\n    this.relHeight = relHeight;\n  }\n}\n\nexport default class ThreeView {\n  constructor(props) {\n    const { container, width, height, parts } = props;\n    this.container = container;\n    this.widht = width;\n    this.height = height;\n    this.parts = parts || [];\n    this.partImages = this.parts.map((item) => new PartImage(item));\n\n    this.svg = select(container)\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    this.xScale = scaleLinear()\n      .domain(extent(parts, (item) => item.relWidth))\n      .range([0, width]);\n\n    this.yScale = scaleLinear()\n      .domain(extent(parts, (item) => item.relHeight))\n      .range([0, height]);\n    console.log(data);\n  }\n\n  async render() {\n    const partSvg = await svg(\"/img/beam_3.svg\");\n    const wrap = this.svg.insert(\n      () => partSvg.documentElement.firstElementChild\n    );\n    console.log(wrap);\n  }\n}\n"]}]}